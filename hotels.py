import aiohttp
import os
from datetime import datetime, timedelta
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

RAPIDAPI_KEY = os.getenv('RAPIDAPI_KEY')

async def search_hotels(city: str, check_in: str, price_per_night: int):
    try:
        check_in_date = datetime.strptime(check_in, "%d.%m").strftime("%Y-%m-%d")
        url = "https://hotels4.p.rapidapi.com/properties/list"
        querystring = {
            "destination": city,
            "checkIn": check_in_date,
            "checkOut": (datetime.strptime(check_in, "%d.%m") + timedelta(days=1)).strftime("%Y-%m-%d"),
            "adults1": "1",
            "priceMin": str(int(price_per_night * 0.8)),
            "priceMax": str(int(price_per_night * 1.2)),
            "sortOrder": "PRICE",
            "locale": "ru_RU",
            "currency": "RUB",
            "pageNumber": "1",
            "pageSize": "5"
        }
        headers = {
            "X-RapidAPI-Key": RAPIDAPI_KEY,
            "X-RapidAPI-Host": "hotels4.p.rapidapi.com"
        }

        async with aiohttp.ClientSession() as session:
            async with session.get(url, headers=headers, params=querystring) as response:
                data = await response.json()

                if "data" not in data or "body" not in data["data"] or "searchResults" not in data["data"]["body"]:
                    return "–û—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞."

                hotels = data["data"]["body"]["searchResults"]["results"]
                if not hotels:
                    return "–û—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞."

                result = "üè® –ù–∞–π–¥–µ–Ω–Ω—ã–µ –æ—Ç–µ–ª–∏:\n\n"
                for hotel in hotels:
                    name = hotel.get("name", "–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ —É–∫–∞–∑–∞–Ω–æ")
                    price = hotel.get("ratePlan", {}).get("price", {}).get("current", "–¶–µ–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞")
                    address = hotel.get("address", {}).get("streetAddress", "–ê–¥—Ä–µ—Å –Ω–µ —É–∫–∞–∑–∞–Ω")
                    stars = hotel.get("starRating", "–†–µ–π—Ç–∏–Ω–≥ –Ω–µ —É–∫–∞–∑–∞–Ω")

                    result += (
                        f"üîπ {name}\n"
                        f"‚≠ê –†–µ–π—Ç–∏–Ω–≥: {stars}\n"
                        f"üíµ –¶–µ–Ω–∞ –∑–∞ –Ω–æ—á—å: {price}\n"
                        f"üìç –ê–¥—Ä–µ—Å: {address}\n\n"
                    )

                return result

    except Exception as e:
        return f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –æ—Ç–µ–ª–µ–π: {e}"